//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 17.0.32112.339
// 
namespace User.ClientService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseEntity", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(User.ClientService.BuyDetails))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(User.ClientService.Buying))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(User.ClientService.CakeDesserts))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(User.ClientService.CakesCategory))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(User.ClientService.Status))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(User.ClientService.EventKind))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(User.ClientService.BaseKind))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(User.ClientService.DesignedPhotoGallery))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(User.ClientService.Orders))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(User.ClientService.PicturesInCake))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(User.ClientService.Messages))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(User.ClientService.Customer))]
    public partial class BaseEntity : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BuyDetails", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class BuyDetails : User.ClientService.BaseEntity {
        
        private int AmountField;
        
        private User.ClientService.Buying BuyingCodeField;
        
        private User.ClientService.CakeDesserts CakeCodeField;
        
        private int DetailsCodeField;
        
        private User.ClientService.Status StatusCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public User.ClientService.Buying BuyingCode {
            get {
                return this.BuyingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyingCodeField, value) != true)) {
                    this.BuyingCodeField = value;
                    this.RaisePropertyChanged("BuyingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public User.ClientService.CakeDesserts CakeCode {
            get {
                return this.CakeCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CakeCodeField, value) != true)) {
                    this.CakeCodeField = value;
                    this.RaisePropertyChanged("CakeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DetailsCode {
            get {
                return this.DetailsCodeField;
            }
            set {
                if ((this.DetailsCodeField.Equals(value) != true)) {
                    this.DetailsCodeField = value;
                    this.RaisePropertyChanged("DetailsCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public User.ClientService.Status StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Buying", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class Buying : User.ClientService.BaseEntity {
        
        private int BuyingCodeField;
        
        private System.DateTime BuyingDateField;
        
        private int BuyingPriceField;
        
        private string BuyingTimeField;
        
        private string CreditCardField;
        
        private User.ClientService.Customer CustomerCodeField;
        
        private string CvvField;
        
        private string IdOfCardField;
        
        private bool IsShippingField;
        
        private string ShippingAddressField;
        
        private string ShippingPhoneField;
        
        private string ValidityField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuyingCode {
            get {
                return this.BuyingCodeField;
            }
            set {
                if ((this.BuyingCodeField.Equals(value) != true)) {
                    this.BuyingCodeField = value;
                    this.RaisePropertyChanged("BuyingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime BuyingDate {
            get {
                return this.BuyingDateField;
            }
            set {
                if ((this.BuyingDateField.Equals(value) != true)) {
                    this.BuyingDateField = value;
                    this.RaisePropertyChanged("BuyingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuyingPrice {
            get {
                return this.BuyingPriceField;
            }
            set {
                if ((this.BuyingPriceField.Equals(value) != true)) {
                    this.BuyingPriceField = value;
                    this.RaisePropertyChanged("BuyingPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BuyingTime {
            get {
                return this.BuyingTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyingTimeField, value) != true)) {
                    this.BuyingTimeField = value;
                    this.RaisePropertyChanged("BuyingTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CreditCard {
            get {
                return this.CreditCardField;
            }
            set {
                if ((object.ReferenceEquals(this.CreditCardField, value) != true)) {
                    this.CreditCardField = value;
                    this.RaisePropertyChanged("CreditCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public User.ClientService.Customer CustomerCode {
            get {
                return this.CustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCodeField, value) != true)) {
                    this.CustomerCodeField = value;
                    this.RaisePropertyChanged("CustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cvv {
            get {
                return this.CvvField;
            }
            set {
                if ((object.ReferenceEquals(this.CvvField, value) != true)) {
                    this.CvvField = value;
                    this.RaisePropertyChanged("Cvv");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdOfCard {
            get {
                return this.IdOfCardField;
            }
            set {
                if ((object.ReferenceEquals(this.IdOfCardField, value) != true)) {
                    this.IdOfCardField = value;
                    this.RaisePropertyChanged("IdOfCard");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsShipping {
            get {
                return this.IsShippingField;
            }
            set {
                if ((this.IsShippingField.Equals(value) != true)) {
                    this.IsShippingField = value;
                    this.RaisePropertyChanged("IsShipping");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingAddress {
            get {
                return this.ShippingAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingAddressField, value) != true)) {
                    this.ShippingAddressField = value;
                    this.RaisePropertyChanged("ShippingAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShippingPhone {
            get {
                return this.ShippingPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.ShippingPhoneField, value) != true)) {
                    this.ShippingPhoneField = value;
                    this.RaisePropertyChanged("ShippingPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Validity {
            get {
                return this.ValidityField;
            }
            set {
                if ((object.ReferenceEquals(this.ValidityField, value) != true)) {
                    this.ValidityField = value;
                    this.RaisePropertyChanged("Validity");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CakeDesserts", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class CakeDesserts : User.ClientService.BaseEntity {
        
        private User.ClientService.CakesCategory CakeCategoryField;
        
        private int CakeCodeField;
        
        private string CakeDetailsField;
        
        private string CakeNameField;
        
        private string CakePictureField;
        
        private int CakePriceField;
        
        private bool IsDairyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public User.ClientService.CakesCategory CakeCategory {
            get {
                return this.CakeCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CakeCategoryField, value) != true)) {
                    this.CakeCategoryField = value;
                    this.RaisePropertyChanged("CakeCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CakeCode {
            get {
                return this.CakeCodeField;
            }
            set {
                if ((this.CakeCodeField.Equals(value) != true)) {
                    this.CakeCodeField = value;
                    this.RaisePropertyChanged("CakeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CakeDetails {
            get {
                return this.CakeDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.CakeDetailsField, value) != true)) {
                    this.CakeDetailsField = value;
                    this.RaisePropertyChanged("CakeDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CakeName {
            get {
                return this.CakeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CakeNameField, value) != true)) {
                    this.CakeNameField = value;
                    this.RaisePropertyChanged("CakeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CakePicture {
            get {
                return this.CakePictureField;
            }
            set {
                if ((object.ReferenceEquals(this.CakePictureField, value) != true)) {
                    this.CakePictureField = value;
                    this.RaisePropertyChanged("CakePicture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CakePrice {
            get {
                return this.CakePriceField;
            }
            set {
                if ((this.CakePriceField.Equals(value) != true)) {
                    this.CakePriceField = value;
                    this.RaisePropertyChanged("CakePrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsDairy {
            get {
                return this.IsDairyField;
            }
            set {
                if ((this.IsDairyField.Equals(value) != true)) {
                    this.IsDairyField = value;
                    this.RaisePropertyChanged("IsDairy");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CakesCategory", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class CakesCategory : User.ClientService.BaseEntity {
        
        private int CategoryCodeField;
        
        private string CategoryNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryCode {
            get {
                return this.CategoryCodeField;
            }
            set {
                if ((this.CategoryCodeField.Equals(value) != true)) {
                    this.CategoryCodeField = value;
                    this.RaisePropertyChanged("CategoryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CategoryName {
            get {
                return this.CategoryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryNameField, value) != true)) {
                    this.CategoryNameField = value;
                    this.RaisePropertyChanged("CategoryName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class Status : User.ClientService.BaseEntity {
        
        private int StatusCodeField;
        
        private string StatusNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((this.StatusCodeField.Equals(value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StatusName {
            get {
                return this.StatusNameField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusNameField, value) != true)) {
                    this.StatusNameField = value;
                    this.RaisePropertyChanged("StatusName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventKind", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class EventKind : User.ClientService.BaseEntity {
        
        private int EventKindCodeField;
        
        private string EventKindNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventKindCode {
            get {
                return this.EventKindCodeField;
            }
            set {
                if ((this.EventKindCodeField.Equals(value) != true)) {
                    this.EventKindCodeField = value;
                    this.RaisePropertyChanged("EventKindCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventKindName {
            get {
                return this.EventKindNameField;
            }
            set {
                if ((object.ReferenceEquals(this.EventKindNameField, value) != true)) {
                    this.EventKindNameField = value;
                    this.RaisePropertyChanged("EventKindName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BaseKind", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class BaseKind : User.ClientService.BaseEntity {
        
        private int KindCodeField;
        
        private string KindNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KindCode {
            get {
                return this.KindCodeField;
            }
            set {
                if ((this.KindCodeField.Equals(value) != true)) {
                    this.KindCodeField = value;
                    this.RaisePropertyChanged("KindCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KindName {
            get {
                return this.KindNameField;
            }
            set {
                if ((object.ReferenceEquals(this.KindNameField, value) != true)) {
                    this.KindNameField = value;
                    this.RaisePropertyChanged("KindName");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DesignedPhotoGallery", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class DesignedPhotoGallery : User.ClientService.BaseEntity {
        
        private User.ClientService.BaseKind BaseKindField;
        
        private int DesignedCakeCodeField;
        
        private string DetailsField;
        
        private User.ClientService.EventKind EventKindField;
        
        private string PictureField;
        
        private int PriceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public User.ClientService.BaseKind BaseKind {
            get {
                return this.BaseKindField;
            }
            set {
                if ((object.ReferenceEquals(this.BaseKindField, value) != true)) {
                    this.BaseKindField = value;
                    this.RaisePropertyChanged("BaseKind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DesignedCakeCode {
            get {
                return this.DesignedCakeCodeField;
            }
            set {
                if ((this.DesignedCakeCodeField.Equals(value) != true)) {
                    this.DesignedCakeCodeField = value;
                    this.RaisePropertyChanged("DesignedCakeCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Details {
            get {
                return this.DetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.DetailsField, value) != true)) {
                    this.DetailsField = value;
                    this.RaisePropertyChanged("Details");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public User.ClientService.EventKind EventKind {
            get {
                return this.EventKindField;
            }
            set {
                if ((object.ReferenceEquals(this.EventKindField, value) != true)) {
                    this.EventKindField = value;
                    this.RaisePropertyChanged("EventKind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Picture {
            get {
                return this.PictureField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureField, value) != true)) {
                    this.PictureField = value;
                    this.RaisePropertyChanged("Picture");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Orders", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class Orders : User.ClientService.BaseEntity {
        
        private User.ClientService.Buying BuyingCodeField;
        
        private User.ClientService.DesignedPhotoGallery CakeExampleCodeField;
        
        private User.ClientService.BaseKind CakeKindField;
        
        private System.DateTime DateGoalField;
        
        private int OrderCodeField;
        
        private int PriceField;
        
        private string RemarksField;
        
        private User.ClientService.Status StatusCodeField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public User.ClientService.Buying BuyingCode {
            get {
                return this.BuyingCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BuyingCodeField, value) != true)) {
                    this.BuyingCodeField = value;
                    this.RaisePropertyChanged("BuyingCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public User.ClientService.DesignedPhotoGallery CakeExampleCode {
            get {
                return this.CakeExampleCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CakeExampleCodeField, value) != true)) {
                    this.CakeExampleCodeField = value;
                    this.RaisePropertyChanged("CakeExampleCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public User.ClientService.BaseKind CakeKind {
            get {
                return this.CakeKindField;
            }
            set {
                if ((object.ReferenceEquals(this.CakeKindField, value) != true)) {
                    this.CakeKindField = value;
                    this.RaisePropertyChanged("CakeKind");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateGoal {
            get {
                return this.DateGoalField;
            }
            set {
                if ((this.DateGoalField.Equals(value) != true)) {
                    this.DateGoalField = value;
                    this.RaisePropertyChanged("DateGoal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderCode {
            get {
                return this.OrderCodeField;
            }
            set {
                if ((this.OrderCodeField.Equals(value) != true)) {
                    this.OrderCodeField = value;
                    this.RaisePropertyChanged("OrderCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remarks {
            get {
                return this.RemarksField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarksField, value) != true)) {
                    this.RemarksField = value;
                    this.RaisePropertyChanged("Remarks");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public User.ClientService.Status StatusCode {
            get {
                return this.StatusCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusCodeField, value) != true)) {
                    this.StatusCodeField = value;
                    this.RaisePropertyChanged("StatusCode");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PicturesInCake", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class PicturesInCake : User.ClientService.BaseEntity {
        
        private int CombinePictureCodeField;
        
        private User.ClientService.Orders OrderCodeField;
        
        private string PictureFileField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CombinePictureCode {
            get {
                return this.CombinePictureCodeField;
            }
            set {
                if ((this.CombinePictureCodeField.Equals(value) != true)) {
                    this.CombinePictureCodeField = value;
                    this.RaisePropertyChanged("CombinePictureCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public User.ClientService.Orders OrderCode {
            get {
                return this.OrderCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderCodeField, value) != true)) {
                    this.OrderCodeField = value;
                    this.RaisePropertyChanged("OrderCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PictureFile {
            get {
                return this.PictureFileField;
            }
            set {
                if ((object.ReferenceEquals(this.PictureFileField, value) != true)) {
                    this.PictureFileField = value;
                    this.RaisePropertyChanged("PictureFile");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Messages", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class Messages : User.ClientService.BaseEntity {
        
        private string ContentField;
        
        private User.ClientService.Customer CustomerCodeField;
        
        private bool IsCustomerField;
        
        private bool IsReadField;
        
        private int MessageCodeField;
        
        private string TopicField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public User.ClientService.Customer CustomerCode {
            get {
                return this.CustomerCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerCodeField, value) != true)) {
                    this.CustomerCodeField = value;
                    this.RaisePropertyChanged("CustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCustomer {
            get {
                return this.IsCustomerField;
            }
            set {
                if ((this.IsCustomerField.Equals(value) != true)) {
                    this.IsCustomerField = value;
                    this.RaisePropertyChanged("IsCustomer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRead {
            get {
                return this.IsReadField;
            }
            set {
                if ((this.IsReadField.Equals(value) != true)) {
                    this.IsReadField = value;
                    this.RaisePropertyChanged("IsRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MessageCode {
            get {
                return this.MessageCodeField;
            }
            set {
                if ((this.MessageCodeField.Equals(value) != true)) {
                    this.MessageCodeField = value;
                    this.RaisePropertyChanged("MessageCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Topic {
            get {
                return this.TopicField;
            }
            set {
                if ((object.ReferenceEquals(this.TopicField, value) != true)) {
                    this.TopicField = value;
                    this.RaisePropertyChanged("Topic");
                }
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Customer", Namespace="http://schemas.datacontract.org/2004/07/Model")]
    public partial class Customer : User.ClientService.BaseEntity {
        
        private int CustomerCodeField;
        
        private string CustomerPasswordField;
        
        private string CustomerPhoneField;
        
        private string FirstNameField;
        
        private string GmailField;
        
        private string LastNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CustomerCode {
            get {
                return this.CustomerCodeField;
            }
            set {
                if ((this.CustomerCodeField.Equals(value) != true)) {
                    this.CustomerCodeField = value;
                    this.RaisePropertyChanged("CustomerCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerPassword {
            get {
                return this.CustomerPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerPasswordField, value) != true)) {
                    this.CustomerPasswordField = value;
                    this.RaisePropertyChanged("CustomerPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerPhone {
            get {
                return this.CustomerPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerPhoneField, value) != true)) {
                    this.CustomerPhoneField = value;
                    this.RaisePropertyChanged("CustomerPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gmail {
            get {
                return this.GmailField;
            }
            set {
                if ((object.ReferenceEquals(this.GmailField, value) != true)) {
                    this.GmailField = value;
                    this.RaisePropertyChanged("Gmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClientService.IClient")]
    public interface IClient {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/IsPasswordClient", ReplyAction="http://tempuri.org/IClient/IsPasswordClientResponse")]
        System.Threading.Tasks.Task<bool> IsPasswordClientAsync(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetCustomerByName", ReplyAction="http://tempuri.org/IClient/GetCustomerByNameResponse")]
        System.Threading.Tasks.Task<User.ClientService.Customer> GetCustomerByNameAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/AddNewCustomer", ReplyAction="http://tempuri.org/IClient/AddNewCustomerResponse")]
        System.Threading.Tasks.Task AddNewCustomerAsync(User.ClientService.Customer c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/UpdateCustomer", ReplyAction="http://tempuri.org/IClient/UpdateCustomerResponse")]
        System.Threading.Tasks.Task UpdateCustomerAsync(User.ClientService.Customer c);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetBuyDetails", ReplyAction="http://tempuri.org/IClient/GetBuyDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.BuyDetails>> GetBuyDetailsAsync(int codeBuy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAllBuyings", ReplyAction="http://tempuri.org/IClient/GetAllBuyingsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Buying>> GetAllBuyingsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAllCakeDesserts", ReplyAction="http://tempuri.org/IClient/GetAllCakeDessertsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.CakeDesserts>> GetAllCakeDessertsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAllCategories", ReplyAction="http://tempuri.org/IClient/GetAllCategoriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.CakesCategory>> GetAllCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetNextBuyingKey", ReplyAction="http://tempuri.org/IClient/GetNextBuyingKeyResponse")]
        System.Threading.Tasks.Task<int> GetNextBuyingKeyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAllEventsKind", ReplyAction="http://tempuri.org/IClient/GetAllEventsKindResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.EventKind>> GetAllEventsKindAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAllBaseKind", ReplyAction="http://tempuri.org/IClient/GetAllBaseKindResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.BaseKind>> GetAllBaseKindAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAllDesignedPhotoGallery", ReplyAction="http://tempuri.org/IClient/GetAllDesignedPhotoGalleryResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.DesignedPhotoGallery>> GetAllDesignedPhotoGalleryAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetDesignedPhotoGalleriesByBaseKindAndEvent", ReplyAction="http://tempuri.org/IClient/GetDesignedPhotoGalleriesByBaseKindAndEventResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.DesignedPhotoGallery>> GetDesignedPhotoGalleriesByBaseKindAndEventAsync(int baseKind, int eventKind);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetOrderByCodeBuying", ReplyAction="http://tempuri.org/IClient/GetOrderByCodeBuyingResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Orders>> GetOrderByCodeBuyingAsync(int codeBuy);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/AddBuying", ReplyAction="http://tempuri.org/IClient/AddBuyingResponse")]
        System.Threading.Tasks.Task AddBuyingAsync(User.ClientService.Buying buying, System.Collections.Generic.List<User.ClientService.BuyDetails> buyDetails, System.Collections.Generic.List<User.ClientService.Orders> orders, System.Collections.Generic.List<User.ClientService.PicturesInCake> pics, System.Collections.Generic.List<byte[]> lstPic);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetStatusByCode", ReplyAction="http://tempuri.org/IClient/GetStatusByCodeResponse")]
        System.Threading.Tasks.Task<User.ClientService.Status> GetStatusByCodeAsync(int code);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAllbuyDetails", ReplyAction="http://tempuri.org/IClient/GetAllbuyDetailsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.BuyDetails>> GetAllbuyDetailsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetBuyingsByCustomer", ReplyAction="http://tempuri.org/IClient/GetBuyingsByCustomerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Buying>> GetBuyingsByCustomerAsync(User.ClientService.Customer customer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetBuyDetailsByBuying", ReplyAction="http://tempuri.org/IClient/GetBuyDetailsByBuyingResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.BuyDetails>> GetBuyDetailsByBuyingAsync(int buying);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetOrdersByBuying", ReplyAction="http://tempuri.org/IClient/GetOrdersByBuyingResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Orders>> GetOrdersByBuyingAsync(int buying);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetImage", ReplyAction="http://tempuri.org/IClient/GetImageResponse")]
        System.Threading.Tasks.Task<byte[]> GetImageAsync(string fileName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/AddPictureInCake", ReplyAction="http://tempuri.org/IClient/AddPictureInCakeResponse")]
        System.Threading.Tasks.Task AddPictureInCakeAsync(User.ClientService.PicturesInCake pic, byte[] fileImage);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetCakeDessertsByCategoryCode", ReplyAction="http://tempuri.org/IClient/GetCakeDessertsByCategoryCodeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.CakeDesserts>> GetCakeDessertsByCategoryCodeAsync(int cakesCategoryCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAllOrders", ReplyAction="http://tempuri.org/IClient/GetAllOrdersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Orders>> GetAllOrdersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAllOrdersByBuyingCode", ReplyAction="http://tempuri.org/IClient/GetAllOrdersByBuyingCodeResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Orders>> GetAllOrdersByBuyingCodeAsync(int buying);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetNextMessagesKey", ReplyAction="http://tempuri.org/IClient/GetNextMessagesKeyResponse")]
        System.Threading.Tasks.Task<int> GetNextMessagesKeyAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/AddNewMessages", ReplyAction="http://tempuri.org/IClient/AddNewMessagesResponse")]
        System.Threading.Tasks.Task AddNewMessagesAsync(User.ClientService.Messages messages);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAllMessages", ReplyAction="http://tempuri.org/IClient/GetAllMessagesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Messages>> GetAllMessagesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetMessagesByCustomer", ReplyAction="http://tempuri.org/IClient/GetMessagesByCustomerResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Messages>> GetMessagesByCustomerAsync(User.ClientService.Customer o);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/ReadAllMessages", ReplyAction="http://tempuri.org/IClient/ReadAllMessagesResponse")]
        System.Threading.Tasks.Task ReadAllMessagesAsync(User.ClientService.Customer o);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientChannel : User.ClientService.IClient, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientClient : System.ServiceModel.ClientBase<User.ClientService.IClient>, User.ClientService.IClient {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ClientClient() : 
                base(ClientClient.GetDefaultBinding(), ClientClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.BasicHttpBinding_IClient.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClientClient(EndpointConfiguration endpointConfiguration) : 
                base(ClientClient.GetBindingForEndpoint(endpointConfiguration), ClientClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClientClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ClientClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClientClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ClientClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ClientClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<bool> IsPasswordClientAsync(string name, string password) {
            return base.Channel.IsPasswordClientAsync(name, password);
        }
        
        public System.Threading.Tasks.Task<User.ClientService.Customer> GetCustomerByNameAsync(string name) {
            return base.Channel.GetCustomerByNameAsync(name);
        }
        
        public System.Threading.Tasks.Task AddNewCustomerAsync(User.ClientService.Customer c) {
            return base.Channel.AddNewCustomerAsync(c);
        }
        
        public System.Threading.Tasks.Task UpdateCustomerAsync(User.ClientService.Customer c) {
            return base.Channel.UpdateCustomerAsync(c);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.BuyDetails>> GetBuyDetailsAsync(int codeBuy) {
            return base.Channel.GetBuyDetailsAsync(codeBuy);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Buying>> GetAllBuyingsAsync() {
            return base.Channel.GetAllBuyingsAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.CakeDesserts>> GetAllCakeDessertsAsync() {
            return base.Channel.GetAllCakeDessertsAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.CakesCategory>> GetAllCategoriesAsync() {
            return base.Channel.GetAllCategoriesAsync();
        }
        
        public System.Threading.Tasks.Task<int> GetNextBuyingKeyAsync() {
            return base.Channel.GetNextBuyingKeyAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.EventKind>> GetAllEventsKindAsync() {
            return base.Channel.GetAllEventsKindAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.BaseKind>> GetAllBaseKindAsync() {
            return base.Channel.GetAllBaseKindAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.DesignedPhotoGallery>> GetAllDesignedPhotoGalleryAsync() {
            return base.Channel.GetAllDesignedPhotoGalleryAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.DesignedPhotoGallery>> GetDesignedPhotoGalleriesByBaseKindAndEventAsync(int baseKind, int eventKind) {
            return base.Channel.GetDesignedPhotoGalleriesByBaseKindAndEventAsync(baseKind, eventKind);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Orders>> GetOrderByCodeBuyingAsync(int codeBuy) {
            return base.Channel.GetOrderByCodeBuyingAsync(codeBuy);
        }
        
        public System.Threading.Tasks.Task AddBuyingAsync(User.ClientService.Buying buying, System.Collections.Generic.List<User.ClientService.BuyDetails> buyDetails, System.Collections.Generic.List<User.ClientService.Orders> orders, System.Collections.Generic.List<User.ClientService.PicturesInCake> pics, System.Collections.Generic.List<byte[]> lstPic) {
            return base.Channel.AddBuyingAsync(buying, buyDetails, orders, pics, lstPic);
        }
        
        public System.Threading.Tasks.Task<User.ClientService.Status> GetStatusByCodeAsync(int code) {
            return base.Channel.GetStatusByCodeAsync(code);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.BuyDetails>> GetAllbuyDetailsAsync() {
            return base.Channel.GetAllbuyDetailsAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Buying>> GetBuyingsByCustomerAsync(User.ClientService.Customer customer) {
            return base.Channel.GetBuyingsByCustomerAsync(customer);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.BuyDetails>> GetBuyDetailsByBuyingAsync(int buying) {
            return base.Channel.GetBuyDetailsByBuyingAsync(buying);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Orders>> GetOrdersByBuyingAsync(int buying) {
            return base.Channel.GetOrdersByBuyingAsync(buying);
        }
        
        public System.Threading.Tasks.Task<byte[]> GetImageAsync(string fileName) {
            return base.Channel.GetImageAsync(fileName);
        }
        
        public System.Threading.Tasks.Task AddPictureInCakeAsync(User.ClientService.PicturesInCake pic, byte[] fileImage) {
            return base.Channel.AddPictureInCakeAsync(pic, fileImage);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.CakeDesserts>> GetCakeDessertsByCategoryCodeAsync(int cakesCategoryCode) {
            return base.Channel.GetCakeDessertsByCategoryCodeAsync(cakesCategoryCode);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Orders>> GetAllOrdersAsync() {
            return base.Channel.GetAllOrdersAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Orders>> GetAllOrdersByBuyingCodeAsync(int buying) {
            return base.Channel.GetAllOrdersByBuyingCodeAsync(buying);
        }
        
        public System.Threading.Tasks.Task<int> GetNextMessagesKeyAsync() {
            return base.Channel.GetNextMessagesKeyAsync();
        }
        
        public System.Threading.Tasks.Task AddNewMessagesAsync(User.ClientService.Messages messages) {
            return base.Channel.AddNewMessagesAsync(messages);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Messages>> GetAllMessagesAsync() {
            return base.Channel.GetAllMessagesAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<User.ClientService.Messages>> GetMessagesByCustomerAsync(User.ClientService.Customer o) {
            return base.Channel.GetMessagesByCustomerAsync(o);
        }
        
        public System.Threading.Tasks.Task ReadAllMessagesAsync(User.ClientService.Customer o) {
            return base.Channel.ReadAllMessagesAsync(o);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IClient)) {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IClient)) {
                return new System.ServiceModel.EndpointAddress("http://localhost:8733/Design_Time_Addresses/WcfServer/Client/");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return ClientClient.GetBindingForEndpoint(EndpointConfiguration.BasicHttpBinding_IClient);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return ClientClient.GetEndpointAddress(EndpointConfiguration.BasicHttpBinding_IClient);
        }
        
        public enum EndpointConfiguration {
            
            BasicHttpBinding_IClient,
        }
    }
}
